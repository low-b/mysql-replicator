#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.0.0.0\\\"')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-std=c++11 -g -pipe -W -Wall -fPIC')

#C++编译参数.
CXXFLAGS('-std=c++11 -g -pipe -W -Wall -Wno-unused-parameter -fPIC')

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')


#头文件路径.
INCPATHS('. ../src ../include ../proto')


#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt -lcrypt')

#依赖模块
ImportConfigsFrom('../')

#为32位/64位指定不同的依赖路径.
#CONFIGS_32('lib2/ullib')
#CONFIGS_64('lib2-64/ullib')

test_sources=GLOB('../src/*.cpp *.cpp').replace("../src/main.cpp", ' ')

Application('gtest',Sources(test_sources),ENV.LinkLibs()-LinkLibs('../../third-64/boost/lib/libboost_prg_exec_monitor.a')-LinkLibs('../../third-64/boost/lib/libboost_test_exec_monitor.a')-LinkLibs('../../third-64/boost/lib/libboost_unit_test_framework.a')-LinkLibs('../../public/bslext/output/lib/libbsl_var_vscript.a'))
