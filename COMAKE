#edit-mode: -*- python -*-
#coding:gbk

#工作路径.
WORKROOT('../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-std=c++11 -g -pipe -W -Wall -fPIC')

#C++编译参数.
CXXFLAGS('-std=c++11 -g -pipe -W -Wall -fPIC')

#IDL编译参数
IDLFLAGS('--compack')

#UBRPC编译参数
UBRPCFLAGS('--compack')

#头文件路径.
INCPATHS('. ./include ./output ./output/include ./proto')

#使用库
#LIBS('./libproto_test.a')

#链接参数.
LDFLAGS('-lpthread -lcrypto -lrt -lcrypt')

#依赖模块
CONFIGS('third-64/protobuf@protobuf_2-4-1-500_PD_BL')
CONFIGS('third-64/boost@boost_1-57-0-100_PD_BL')
CONFIGS('third-64/gtest@gtest_1-6-0-100_PD_BL')

#为32位/64位指定不同的依赖路径.
#CONFIGS_32('lib2/ullib')
#CONFIGS_64('lib2-64/ullib')

binlog_listener_sources=GLOB('src/*.cpp')


#可执行文件
Application('binlog_listener', Sources(binlog_listener_sources), ENV.LinkLibs()-LinkLibs('../third-64/boost/lib/libboost_log_setup.a'))

